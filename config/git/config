# ~/.config/git/config

[include]
path = ~/.config/git/config.local
path = ~/.git.local

[alias]
b = branch
bcl = branch-clean-local
branch-clean-local = ! "git fetch -np && git for-each-ref --format '%(refname:short) %(upstream:track)' | awk '$2 == \"[gone]\" {print $1}' | xargs -rt git branch -d"
branch-clean-local-force = ! "git fetch -np && git for-each-ref --format '%(refname:short) %(upstream:track)' | awk '$2 == \"[gone]\" {print $1}' | xargs -rt git branch -D"
c = commit
co = checkout
d = diff
f = fetch --all --no-tags --prune --recurse-submodules
fa = for-all-repos f
for-all-repos = !find . -type d -iname .git -print0 2>/dev/null | xargs -0rtn1 -I DIR git -C DIR/../
for-all-repos-parallel = !find . -type d -iname .git -print0 2>/dev/null | xargs -0rtn1 -P"$(nproc)" -I DIR git -C DIR/../
i = !git ignored
ignored = !sh -c 'git status -s --ignored | awk -vFS=\"!! \" \"/^!/ { printf(\\\"%s\\0\\\", \\$2) }\" | xargs -0r git check-ignore -v | awk -vFS=\"[\t]\" \"{ printf(\\\"%-50s %s\\n\\\", \\$2, \\$1) }\"'
l = "!git log --pretty=decorate --decorate --graph --left-right --cherry-pick --boundary ${1:---all} #"
p = pull --prune --no-tags
pa = for-all-repos p --quiet
pap = for-all-repos-parallel p --quiet
psm = push --prune --set-upstream -o merge_request.create -o merge_request.remove_source_branch -o merge_request.assign=quatauta
ps = push --prune --set-upstream
s = status
sa = for-all-repos s

[branch]
autosetupmerge = always
autosetuprebase = always

[color]
ui = auto

[commit]
gpgSign = true

[core]
excludesFile = ~/.config/git/ignore

[credential]
helper = cache

[diff]
colorMoved = default

[fetch]
parallel = 0
prune = true

[filter "lfs"]
clean = git-lfs clean -- %f
smudge = git-lfs smudge -- %f
process = git-lfs filter-process
required = true

[gpg]
format = ssh

[gpg "ssh"]
allowedSignersFile = /Users/daniel/.ssh/allowed_signers

[help]
autocorrect = -1

[include]
path = ~/.git.local

[init]
defaultBranch = main

[log]
date = iso

[merge]
ff = only
conflictstyle = diff3

[pretty]
decorate = format:%C(auto)%h %C(auto,green)%<(12,trunc)%aN %C(auto)%s%d%<(12,trunc) (%C(auto,yellow)%ad %C(auto,magenta)%G?%C(auto,reset))

[pull]
ff = only

[push]
default = current

[rebase]
autosquash = true

[rerere]
enable = true

[status]
branch = true
short = true
submoduleSummary = true

[submodule]
recurse = true

[diff]
colormoved = default
mnemonicprefix = true
renames = copies
submodule = log

[diff "bin"]
binary = true
textconv = hexdump -v -C

[diff "bz2"]
binary = true
textconv = bzcat

[diff "gz"]
binary = true
textconv = gzip -dc

[diff "odf"]
binary = true
textconv = odt2txt

[diff "pdf"]
binary = true
textconv = pdfinfo

[diff "rspec"]
xfuncname = "^[ \t]*((RSpec|describe|context|it|before|after|around|feature|scenario|background)[ \t].*)$"

[diff "tar"]
binary = true
textconv = tar -O -xf

[diff "tar-bz2"]
binary = true
textconv = tar -O -xjf

[diff "tar-gz"]
binary = true
textconv = tar -O -xzf

[diff "tar-xz"]
binary = true
textconv = tar -O -xJf

[diff "xz"]
binary = true
textconv = xzcat

[diff "zip"]
binary = true
textconv = unzip -p
