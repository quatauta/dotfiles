#!/bin/bash

# Copied and adapted from Nicolas Gallagher (necolas)
# https://github.com/necolas/dotfiles/blob/master/shell/bash_prompt
prompt_git() {
    local s=""
    local branchName=""

    # check if the current directory is in a git repository
    if [ $(git rev-parse --is-inside-work-tree &>/dev/null; printf "%s" $?) == 0 ]; then

        # check if the current directory is in .git before running git checks
        if [ "$(git rev-parse --is-inside-git-dir 2> /dev/null)" == "false" ]; then

            # ensure index is up to date
            git update-index --really-refresh  -q &>/dev/null

            # check for uncommitted changes in the index
            if ! $(git diff --quiet --ignore-submodules --cached); then
                s="$s+";
            fi

            # check for unstaged changes
            if ! $(git diff-files --quiet --ignore-submodules --); then
                s="$s!";
            fi

            # check for untracked files
            if [ -n "$(git ls-files --others --exclude-standard)" ]; then
                s="$s?";
            fi

            # check for stashed files
            if $(git rev-parse --verify refs/stash &>/dev/null); then
                s="$s$";
            fi

        fi

        # get the short symbolic ref
        # if HEAD isn't a symbolic ref, get the short SHA
        # otherwise, just give up
        branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
                      git rev-parse --short HEAD 2> /dev/null || \
                      printf "(unknown)")"

        [ -n "$s" ] && s=":$s"

        printf "%s" "$1$branchName$s"
    else
        return
    fi
}

# Copied and adapted from Nicolas Gallagher (necolas)
# https://github.com/necolas/dotfiles/blob/master/shell/bash_prompt
prompt_gentoo_daniel() {
    local black="\033[0;30m"
    local blue="\033[0;34m"
    local brown="\033[0;33m"
    local cyan="\033[0;36m"
    local drak_gray="\033[1;30m"
    local green="\033[0;32m"
    local purple="\033[0;35m"
    local red="\033[0;31m"
    local white="\033[1;37m"
    local yellow="\033[1;33m"
    local light_blue="\033[1;34m"
    local light_cyan="\033[1;36m"
    local light_gray="\033[0;37m"
    local light_green="\033[1;32m"
    local light_purple="\033[1;35m"
    local light_red="\033[1;31m"

    local bold=""
    local reset="\e[0m"

    local host_style="$reset"
    local user_style="$green"

    [[ "$EUID" == "0" ]] && user_style="$red"    # logged in as root
    [[ "$SSH_TTY" ]]     && host_style="$yellow" # connected via ssh

    PS1=""
    PS1+="\[\033]0;\u@\h \w\007\]" # set the terminal title to the current working directory
    PS1+="\[$user_style\]\u" # username
    PS1+="\[$reset\]@"
    PS1+="\[$host_style\]\h" # host
    PS1+="\[$reset\] "
    PS1+="\[$brown\]\w" # working directory
    PS1+="\[$reset\]\$(prompt_git \" git:\")" # git repository details
    PS1+="\[$green\] > \[$reset\]" # $ (and reset color)

    export PS1
    export PS2="\[$green\]>\[$reset\] "
    export PROMPT_DIRTRIM=3
}

prompt_gentoo_daniel
