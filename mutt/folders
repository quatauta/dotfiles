#!/usr/bin/env ruby

require 'find'

class String
  def maildir?
  ["", "cur", "new", "tmp"].map  { |n| File.join(self, n) } \
                           .all? { |n| File.directory? n }
  end

  def mbox?
    # `file -izN #{self}` =~ /:[[:space:]]*(message\/rfc822|text\/x-mail)/i
    /\/?\.[a-z]+\.\d{4}(\.(bz2|gz))?$/i =~ self
  end

  def to_mutt
    self.sub(/^\.\/?(.*)/, '"=\1"')
  end
end

def folders(maildir)
  folders = []

  Dir.chdir(maildir) do
    Find.find(".") do |n|
      Find.prune if /^(cur|new|tmp)$/i =~ n

      folders << n.to_mutt if n.maildir? || n.mbox?
    end
  end

  folders.reject { |n| /drafts|postponed|search/i =~ n } .sort
end

if __FILE__ == $0
  if ARGV.first && File.directory?(ARGV.first)
    puts folders(ARGV.first).join(" ")
  else
    puts "#{$0} <dir with mbox files or Maildirs>"
  end
end
