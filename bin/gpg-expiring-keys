#!/usr/bin/ruby
# frozen_string_literal: true

DEFAULT_DAYS = "31"
DAYS = Float(ARGV.first || DEFAULT_DAYS)
REFERENCE = Time.new + 60 * 60 * 24 * DAYS
FIELDS = {id: 4, validity: 1, expires: 6}.freeze

keys = `LANG=C gpg --with-colons --list-public-keys`
  .lines
  .lazy
  .map { |line| Hash[FIELDS.keys.zip(line.split(":").values_at(*FIELDS.values))] }
  .reject { |key| FIELDS.keys.any? { |field| key[field].empty? } }
  .map { |key| key.merge({expires: Time.at(Integer(key[:expires], 10))}) }
  .select { |key| key[:expires] <= REFERENCE }
  .to_a

if keys.empty?
  exit 0
else
  key_ids = keys.map { |key| key[:id] }

  puts format("%<count>d OpenPGP (sub)key(s) expiring until %<time>s", count: key_ids.size, time: REFERENCE)
  puts
  puts(`gpg --list-public-keys #{key_ids.join(" ")}`)
  exit 1
end
