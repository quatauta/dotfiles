#!/usr/bin/env ruby

require 'vcard'


module Vcard
  class Vcard
    def nick_or_name
      self.nickname || self.name.formatted
    end

    def <=> other
      a, b = [self, other].map { |c|
        [c.name.family, c.name.given,
         c.name.formatted, c.nickname].compact.reject { |n|
          n.empty?
        }.join(", ")
      }
      a <=> b
    end

    def sorted_to_s
      str = []
      str << "BEGIN:VCARD"
      str << "VERSION:#{self.version / 10.0}"

      self.to_s.gsub(/[\r\n]+ +/, "") \
        .split(/[\r\n]+/) \
        .reject { |line| /^(BEGIN|VERSION|END):/ =~ line } \
        .sort.each do |line|
        str << line
      end

      str << "END:VCARD" << ""
      str.join("\r\n")
    end
  end
end


def read_files
  lines = ""

  while (file = gets(nil))
    lines << file
  end

  lines
end

def decode(lines)
  cards = []

  Vcard::Vcard.decode(lines).each do |card|
    cards << card
  end

  cards.sort
end


print(decode(read_files).sort.map { |card|
        card.sorted_to_s
      }.join("\r\n"))
